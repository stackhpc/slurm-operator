{{- /*
SPDX-FileCopyrightText: Copyright (C) SchedMD LLC.
SPDX-License-Identifier: Apache-2.0
*/}}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "slurm.token.name" . }}
  namespace: {{ include "slurm.namespace" . }}
  labels:
    {{- include "slurm.token.labels" . | nindent 4 }}
spec:
  ttlSecondsAfterFinished: 60
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: {{ printf "token-%s" (include "slurm.user" .) }}
      labels:
        {{- include "slurm.token.labels" . | nindent 8 }}
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ include "slurm.cluster.name" . }}
      dnsConfig:
        {{- include "slurm.dnsConfig" . | nindent 8 }}
      {{- include "slurm.imagePullSecrets" . | nindent 6 }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}{{- /* with .Values.controller.affinity */}}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}{{- /* with .Values.controller.tolerations */}}
      initContainers:
        - name: init
          image: {{ include "slurm.authcred.imageRef" . }}
          imagePullPolicy: {{ .Values.authcred.imagePullPolicy | default (include "slurm.imagePullPolicy" .) }}
          {{- with .Values.authcred.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}{{- /* with .Values.authcred.resources */}}
          env:
            - name: SLURM_USER
              value: {{ include "slurm.user" . }}
          command:
            - tini
            - -g
            - --
            - bash
            - -c
            - |
              {{- range .Files.Lines "scripts/init.sh" }}
              {{ . }}
              {{- end }}{{- /* range .Files.Lines "scripts/init.sh" */}}
          volumeMounts:
            {{- include "slurm.init.volumeMounts" . | nindent 12 }}
        - name: sackd
          image: {{ include "slurm.authcred.imageRef" . }}
          imagePullPolicy: {{ .Values.authcred.imagePullPolicy | default (include "slurm.imagePullPolicy" .) }}
          {{- with .Values.authcred.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}{{- /* with .Values.authcred.resources */}}
          restartPolicy: Always
          securityContext:
            {{- include "slurm.securityContext" . | nindent 12 }}
          args:
            - --conf-server
            - {{ printf "%s:%s" (include "slurm.controller.name" .) (include "slurm.controller.port" .) }}
          volumeMounts:
            {{- include "slurm.volumeMounts" . | nindent 12 }}
            - name: authsocket
              mountPath: /run/slurm
      containers:
        - name: {{ printf "token-%s" (include "slurm.user" .) }}
          image: {{ include "slurm.authcred.imageRef" . }}
          imagePullPolicy: {{ .Values.authcred.imagePullPolicy | default (include "slurm.imagePullPolicy" .) }}
          {{- with .Values.authcred.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}{{- /* with .Values.authcred.resources */}}
          securityContext:
            {{- include "slurm.securityContext" . | nindent 12 }}
          env:
            - name: SLURM_USER
              value: {{ include "slurm.user" . }}
            - name: JWT_SECRET
              value: {{ include "slurm.jwt.hs256.secretName" . }}
            - name: TOKEN_SECRET
              value: {{ include "slurm.cluster.secretName" . }}
          command:
            - tini
            - -g
            - --
            - bash
            - -c
            - |
              {{- range .Files.Lines "scripts/init-token-secret.sh" }}
              {{ . }}
              {{- end }}{{- /* .Files.Lines "scripts/init-token-secret.sh" */}}
          volumeMounts:
            {{- include "slurm.volumeMounts" . | nindent 12 }}
            - name: authsocket
              mountPath: /run/slurm
        {{- if and (index .Values "slurm-exporter" "enabled") (index .Values "slurm-exporter" "exporter" "enabled") }}
        - name: {{ printf "token-%s" (include "exporter.user" .) }}
          image: {{ include "slurm.authcred.imageRef" . }}
          imagePullPolicy: {{ .Values.authcred.imagePullPolicy | default (include "slurm.imagePullPolicy" .) }}
          {{- with .Values.authcred.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}{{- /* with .Values.authcred.resources */}}
          securityContext:
            {{- include "slurm.securityContext" . | nindent 12 }}
          env:
            - name: SLURM_USER
              value: {{ include "exporter.user" . }}
            - name: JWT_SECRET
              value: {{ include "slurm.jwt.hs256.secretName" . }}
            - name: TOKEN_SECRET
              value: {{ index .Values "slurm-exporter" "exporter" "secretName" }}
          command:
            - tini
            - -g
            - --
            - bash
            - -c
            - |
              {{- range .Files.Lines "scripts/init-token-secret.sh" }}
              {{ . }}
              {{- end }}{{- /* .Files.Lines "scripts/init-token-secret.sh" */}}
          volumeMounts:
            {{- include "slurm.volumeMounts" . | nindent 12 }}
            - name: authsocket
              mountPath: /run/slurm
        {{- end }}{{- /* if and slurm-exporter.enabled slurm-exporter.exporter.enabled */}}
      volumes:
        {{- include "slurm.volumes" $ | nindent 8 }}
        - name: slurm-config
          projected:
            defaultMode: 0600
            sources:
              - secret:
                  name: {{ include "slurm.auth.secretName" $ }}
        - name: authsocket
          emptyDir: {}
